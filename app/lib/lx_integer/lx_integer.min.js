"use strict";angular.module("lx.integer",[]).directive("lxInteger",function(){var a=/^\-?\d+$/;return{restrict:"A",require:"ngModel",scope:{min:"@",max:"@"},link:function(b,c,d,e){d.$observe("min",function(c){c&&a.test(c)&&(b.minimun=parseInt(c,10))}),d.$observe("max",function(c){c&&a.test(c)&&(b.maximum=parseInt(c,10))}),e.$validators.lxinteger=function(b){return null===b||void 0===b?!0:a.test(b)},e.$validators.min=function(c){return angular.isNumber(b.minimun)&&a.test(c)?parseInt(c,10)>=b.minimun:!0},e.$validators.max=function(c){return angular.isNumber(b.maximum)&&a.test(c)?parseInt(c,10)<=b.maximum:!0},e.$parsers.push(function(b){return b?a.test(b)?parseInt(b,10):NaN:null}),e.$formatters.unshift(function(b){return isNaN(b)||null===b||(b=a.test(b)?parseInt(b,10).toString():b),b})}}});
//# sourceMappingURL=lx_integer.min.js.map