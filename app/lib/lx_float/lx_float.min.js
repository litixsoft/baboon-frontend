"use strict";angular.module("lx.float",[]).directive("lxFloat",function(){function a(a,b){var c=1..toFixed(b);c=c.substr(2);var d=parseInt("1"+c,10),e=parseFloat("."+c+"01");return 10*a*d%10>=5&&(a+=e),Math.round(a*d)/d}var b=/^\-?\d+((\.|,)?(\d+)?)?$/;return{restrict:"A",require:"ngModel",link:function(c,d,e,f){var g=2;e.$observe("lxFloat",function(a){a=c.$eval(a),"number"==typeof a&&(g=a)}),f.$validators.lxfloat=function(a){return null===a||void 0===a?!0:b.test(a)},f.$parsers.push(function(c){return c?b.test(c)?"number"==typeof c?a(c,g):a(parseFloat(c.replace(",",".")),g):0/0:null}),f.$formatters.unshift(function(a){return isNaN(a)||null===a||(a=parseFloat(a).toFixed(g).replace(".",",")),a})}}}),describe("lxFloat",function(){describe("Tests with valid directive configuration",function(){var a,b;beforeEach(module("lx.float")),beforeEach(inject(function(c,d){a=d.$new();var e=angular.element('<form name="form"><intput type="text" ng-model="model.val" name="val" lx-float="2" /></form>');a.model={val:12.34},c(e)(a),a.$digest(),b=a.form})),it("should be initialized correctly",function(){expect(a.model.val).toBe(12.34)}),it("should pass with integer",function(){b.val.$setViewValue(1),expect(a.model.val).toEqual(1),expect(b.val.$valid).toBe(!0)}),it("should pass with float",function(){b.val.$setViewValue(4.25),expect(a.model.val).toEqual(4.25),expect(b.val.$valid).toBe(!0)}),it("should pass with string",function(){b.val.$setViewValue("3.25"),expect(a.model.val).toEqual(3.25),expect(b.val.$valid).toBe(!0)}),it("should not pass with date",function(){b.val.$setViewValue(new Date),expect(a.model.val).toBeUndefined(),expect(b.val.$valid).toBe(!1)}),it("should not pass with boolean",function(){b.val.$setViewValue(!0),expect(a.model.val).toBeUndefined(),expect(b.val.$valid).toBe(!1)}),it("should not pass with an array",function(){b.val.$setViewValue([1,2,3]),expect(a.model.val).toBeUndefined(),expect(b.val.$valid).toBe(!1)}),it("should not pass with an object",function(){b.val.$setViewValue({Value1:"John",Value2:"Doe"}),expect(a.model.val).toBeUndefined(),expect(b.val.$valid).toBe(!1)}),it("should pass with undefined",function(){b.val.$setViewValue(void 0),expect(a.model.val).toBeUndefined(),expect(b.val.$valid).toBe(!0)}),it("should pass with null",function(){b.val.$setViewValue(null),expect(a.model.val).toBeNull(),expect(b.val.$valid).toBe(!0)}),it("should pass with negative number",function(){b.val.$setViewValue("-3,25"),expect(a.model.val).toBe(-3.25),expect(b.val.$valid).toBe(!0)}),it("should be round a long number",function(){b.val.$setViewValue(3.2355),expect(a.model.val).toBe(3.24),expect(b.val.$valid).toBe(!0)}),it("should return null if model is null",function(){a.model.val=null,a.$digest(),expect(b.val.$viewValue).toBe(null),expect(b.val.$valid).toBe(!0)}),it("should not pass if model is NaN",function(){a.model.val="NaN",a.$digest(),expect(b.val.$valid).toBe(!1)}),it("should not pass if model is NaN 2",function(){a.model.val="3.23.4",a.$digest(),expect(b.val.$valid).toBe(!1)}),it("should not pass if model is NaN 2",function(){a.model.val="3,23,4",a.$digest(),expect(b.val.$valid).toBe(!1)}),it("should not pass if model is NaN 2",function(){a.model.val="3.23,4",a.$digest(),expect(b.val.$valid).toBe(!1)})}),describe("Tests with invalid directive configuration",function(){var a,b;beforeEach(module("lx.float")),beforeEach(inject(function(c,d){a=d.$new();var e=angular.element('<form name="form"><intput type="text" ng-model="model.val" name="val" lx-float="a" /></form>');a.model={val:12.34},c(e)(a),a.$digest(),b=a.form})),it("should be initialized correctly",function(){expect(a.model.val).toBe(12.34)}),it("should pass with default numberOfDigits = 2",function(){b.val.$setViewValue(1.234),expect(a.model.val).toEqual(1.23),expect(b.val.$valid).toBe(!0)})})});
//# sourceMappingURL=lx_float.min.js.map